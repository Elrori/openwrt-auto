name: zynq-ebaz4205

on:
# release:
#   types: published
# push:
#   branches:
#     - master
#   paths:
#     - 'Lean'
#   schedule:
#     - cron: 0 18 * * *
#   watch:
#     types: started
  
env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  CONFIG_FILE: zynq-ebaz4205-lite.config
  DIY_SH: zynq-ebaz4205-lite.sh
  SSH_ACTIONS:  true
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 初始环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
        
    - name: 下载源码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt && cd openwrt && ./scripts/feeds clean && ./scripts/feeds update -a && ./scripts/feeds install -a
   
    - name: 导入自定义
      run: |
        git clone https://github.com/sypopo/diy ./openwrt/diy/sypopo
        mv ./openwrt/diy/sypopo/$CONFIG_FILE $(pwd)
        mv ./openwrt/diy/sypopo/$DIY_SH $(pwd)
        df -h && pwd
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH && cd openwrt && ../$DIY_SH
    - name: SSH连接
      uses: sypopo/debugger-action@master
      if: env.SSH_ACTIONS == 'true'
        
    - name: 下载软件包
      id: package
      run: |
        cd openwrt && make defconfig && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 固件编译
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        cp -f .config ./bin/targets/*/*/
        
    - name: 上传bin
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin-x86-Lean
        path: openwrt/bin

    - name: 固件打包
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cp openwrt/.config  openwrt/bin/targets/x86/64/config.txt
        tar -czf bin.tar.gz openwrt/bin && cp -vf bin.tar.gz openwrt/bin/targets/x86/64
        cd openwrt/bin/targets/*/*
        rm -rf packages *rootfs* *vmlinuz *info *fest
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
    - name: 上传固件
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt-x86-Lean
        path: ${{ env.FIRMWARE }}
